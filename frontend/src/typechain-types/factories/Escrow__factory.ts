/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Escrow, EscrowInterface } from "../Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbiter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "approver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "IssueRaised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "IssueResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "amountToWithdraw",
    outputs: [
      {
        internalType: "uint232",
        name: "",
        type: "uint232",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbiter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArbiter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "haveIssue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isIssueRaised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raiseIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resolveIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526040516200163438038062001634833981810160405281019062000029919062000137565b3273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506200017e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ff82620000d2565b9050919050565b6200011181620000f2565b81146200011d57600080fd5b50565b600081519050620001318162000106565b92915050565b60008060408385031215620001515762000150620000cd565b5b6000620001618582860162000120565b9250506020620001748582860162000120565b9150509250929050565b60805160a05160c05161142b6200020960003960008181610342015281816104c50152818161065301528181610c3b0152610d7b015260008181610800015281816108240152818161095c015281816109ec01528181610b740152610bdc0152600081816103970152818161051a01528181610c1501528181610c630152610c89015261142b6000f3fe6080604052600436106100ec5760003560e01c80633ccfd60b1161008a578063cffe00f911610059578063cffe00f914610295578063e1b7535f146102c0578063e8d94545146102eb578063fe25e00a14610302576100f3565b80633ccfd60b146101fd578063565a2e2c14610214578063713e40531461023f578063c7c4ff461461026a576100f3565b806312424e3f116100c657806312424e3f14610165578063269fa1281461017c57806328f371aa146101a757806338af3eed146101d2576100f3565b806305a8bebb146100f85780630afc86cd1461012357806312065fe01461013a576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061010d61032d565b60405161011a9190610db8565b60405180910390f35b34801561012f57600080fd5b50610138610340565b005b34801561014657600080fd5b5061014f6104bb565b60405161015c9190610dec565b60405180910390f35b34801561017157600080fd5b5061017a6104c3565b005b34801561018857600080fd5b506101916107be565b60405161019e9190610e3f565b60405180910390f35b3480156101b357600080fd5b506101bc6107ed565b6040516101c99190610db8565b60405180910390f35b3480156101de57600080fd5b506101e76107fe565b6040516101f49190610e9b565b60405180910390f35b34801561020957600080fd5b50610212610822565b005b34801561022057600080fd5b50610229610bd8565b6040516102369190610e9b565b60405180910390f35b34801561024b57600080fd5b50610254610c00565b6040516102619190610db8565b60405180910390f35b34801561027657600080fd5b5061027f610c13565b60405161028c9190610e9b565b60405180910390f35b3480156102a157600080fd5b506102aa610c37565b6040516102b79190610e9b565b60405180910390f35b3480156102cc57600080fd5b506102d5610c5f565b6040516102e29190610e9b565b60405180910390f35b3480156102f757600080fd5b50610300610c87565b005b34801561030e57600080fd5b50610317610d79565b6040516103249190610e9b565b60405180910390f35b600060019054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103e557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b90610f39565b60405180910390fd5b600060019054906101000a900460ff16610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610fa5565b60405180910390fd5b60008060016101000a81548160ff0219169083151502179055507fb27455f7ab4544fbda9654abd9182c9c688ad54daa3d8ebed43e83a717050bb160405160405180910390a1565b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061056857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90610f39565b60405180910390fd5b60001515600060019054906101000a900460ff161515146105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490611011565b60405180910390fd5b6000151560008054906101000a900460ff16151514610651576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106489061107d565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036106fb5760011515600060029054906101000a900460ff161515146106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f19061110f565b60405180910390fd5b5b600047905080600060036101000a8154817cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555060016000806101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167ff13bfe0b6ec5df39265dccb0a01a09aa4162489c7a083dc6670bde0255d02ca7826040516107b39190610dec565b60405180910390a250565b600060039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a79061117b565b60405180910390fd5b6001151560008054906101000a900460ff16151514610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb906111e7565b60405180910390fd5b60001515600060019054906101000a900460ff1615151461095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611253565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df9061117b565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600060039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16604051610a78906112a4565b60006040518083038185875af1925050503d8060008114610ab5576040519150601f19603f3d011682016040523d82523d6000602084013e610aba565b606091505b5050905080610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af590611305565b60405180910390fd5b60008060036101000a8154817cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d57f0000000000000000000000000000000000000000000000000000000000000000600060039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16604051610bcd929190611360565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600060029054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c906113d5565b60405180910390fd5b6001600060016101000a81548160ff0219169083151502179055506001600060026101000a81548160ff0219169083151502179055507f1b9d8093c082ae4682692b2ce9e67be0af01c764fb16707f715b42ed85c67b5360405160405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008115159050919050565b610db281610d9d565b82525050565b6000602082019050610dcd6000830184610da9565b92915050565b6000819050919050565b610de681610dd3565b82525050565b6000602082019050610e016000830184610ddd565b92915050565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610e3981610e07565b82525050565b6000602082019050610e546000830184610e30565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8582610e5a565b9050919050565b610e9581610e7a565b82525050565b6000602082019050610eb06000830184610e8c565b92915050565b600082825260208201905092915050565b7f4f6e6c792061726269746572206f72206465706f7369746f722063616e20746160008201527f6b65207468697320616374696f6e000000000000000000000000000000000000602082015250565b6000610f23602e83610eb6565b9150610f2e82610ec7565b604082019050919050565b60006020820190508181036000830152610f5281610f16565b9050919050565b7f4973737565206973206e6f742072616973656400000000000000000000000000600082015250565b6000610f8f601383610eb6565b9150610f9a82610f59565b602082019050919050565b60006020820190508181036000830152610fbe81610f82565b9050919050565b7f4973737565206973207261697365642063616e6e6f7420617070726f76650000600082015250565b6000610ffb601e83610eb6565b915061100682610fc5565b602082019050919050565b6000602082019050818103600083015261102a81610fee565b9050919050565b7f416c726561647920617070726f76656400000000000000000000000000000000600082015250565b6000611067601083610eb6565b915061107282611031565b602082019050919050565b600060208201905081810360008301526110968161105a565b9050919050565b7f417262697465722063616e6e6f7420617070726f76652069662069737375652060008201527f6973206e6f742072616973656400000000000000000000000000000000000000602082015250565b60006110f9602d83610eb6565b91506111048261109d565b604082019050919050565b60006020820190508181036000830152611128816110ec565b9050919050565b7f4f6e6c792062656e65666963696172792063616e207769746864726177000000600082015250565b6000611165601d83610eb6565b91506111708261112f565b602082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f4e6f7420617070726f7665640000000000000000000000000000000000000000600082015250565b60006111d1600c83610eb6565b91506111dc8261119b565b602082019050919050565b60006020820190508181036000830152611200816111c4565b9050919050565b7f4973737565206973207261697365642063616e6e6f7420776974686472617700600082015250565b600061123d601f83610eb6565b915061124882611207565b602082019050919050565b6000602082019050818103600083015261126c81611230565b9050919050565b600081905092915050565b50565b600061128e600083611273565b91506112998261127e565b600082019050919050565b60006112af82611281565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006112ef600f83610eb6565b91506112fa826112b9565b602082019050919050565b6000602082019050818103600083015261131e816112e2565b9050919050565b6000819050919050565b600061134a61134561134084610e07565b611325565b610dd3565b9050919050565b61135a8161132f565b82525050565b60006040820190506113756000830185610e8c565b6113826020830184611351565b9392505050565b7f4f6e6c79206465706f7369746f722063616e2072616973652069737375650000600082015250565b60006113bf601e83610eb6565b91506113ca82611389565b602082019050919050565b600060208201905081810360008301526113ee816113b2565b905091905056fea264697066735822122007392965761cbc49601a011c513c4541b4e78cdfe475fd70b6c854e3b794329664736f6c63430008110033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbiter: PromiseOrValue<string>,
    _beneficiary: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Escrow> {
    return super.deploy(
      _arbiter,
      _beneficiary,
      overrides || {}
    ) as Promise<Escrow>;
  }
  override getDeployTransaction(
    _arbiter: PromiseOrValue<string>,
    _beneficiary: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbiter, _beneficiary, overrides || {});
  }
  override attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  override connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
